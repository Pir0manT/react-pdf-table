{"version":3,"file":"TableHeader.js","sourceRoot":"","sources":["../src/TableHeader.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,iCAAiD;AACjD,uCAAmD;AAQ5C,IAAM,WAAW,GAAG,UAAC,KAAuB;IAC3C,IAAA,KAAiF,IAAA,gCAAwB,EAAC,KAAK,CAAC,EAA/G,iBAAiB,uBAAA,EAAE,mBAAmB,yBAAA,EAAE,kBAAkB,wBAAA,EAAE,gBAAgB,sBAAmC,CAAC;IAErH,IAAM,QAAQ,GAAU,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAE/D,OAAO,CACH,oBAAC,mBAAQ,eACD,KAAK,IACT,GAAG,EAAE,QAAQ,EACb,iBAAiB,EAAE,iBAAiB,EACpC,mBAAmB,EAAE,mBAAmB,EACxC,kBAAkB,EAAE,kBAAkB,EACtC,gBAAgB,EAAE,gBAAgB,KAG9B,QAAQ,CAAC,GAAG,CAAC,UAAC,EAAE,EAAE,WAAW,IAAK,OAAA,KAAK,CAAC,YAAY,CAAC,EAAE,EAAE;QACrD,GAAG,EAAE,WAAW;QAChB,QAAQ,EAAE,IAAI;QACd,QAAQ,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ;QAC7C,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS;QAChD,iBAAiB,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,KAAK,SAAS,IAAI,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,iBAAiB,IAAI,WAAW,KAAK,CAAC;QACrI,kBAAkB,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,kBAAkB,KAAK,SAAS,IAAI,EAAE,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,kBAAkB,IAAI,WAAW,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;KAChK,CAAC,EAPgC,CAOhC,CAAC,CAEA,CACd,CAAC;AACN,CAAC,CAAA;AA1BY,QAAA,WAAW,eA0BvB","sourcesContent":["import * as React from \"react\";\r\nimport {getDefaultBorderIncludes} from \"./Utils\";\r\nimport {TableRow, TableRowProps} from \"./TableRow\";\r\n\r\nexport interface TableHeaderProps extends TableRowProps<never> {\r\n}\r\n\r\n/**\r\n * This component displays the titles for the rows.\r\n */\r\nexport const TableHeader = (props: TableHeaderProps) => {\r\n    let {includeLeftBorder, includeBottomBorder, includeRightBorder, includeTopBorder} = getDefaultBorderIncludes(props);\r\n\r\n    const rowCells: any[] = React.Children.toArray(props.children);\r\n\r\n    return (\r\n        <TableRow\r\n            {...props}\r\n            key={\"header\"}\r\n            includeLeftBorder={includeLeftBorder}\r\n            includeBottomBorder={includeBottomBorder}\r\n            includeRightBorder={includeRightBorder}\r\n            includeTopBorder={includeTopBorder}\r\n        >\r\n            {\r\n                rowCells.map((rc, columnIndex) => React.cloneElement(rc, {\r\n                    key: columnIndex,\r\n                    isHeader: true,\r\n                    fontSize: rc.props.fontSize || props.fontSize,\r\n                    textAlign: rc.props.textAlign || props.textAlign,\r\n                    includeLeftBorder: (rc.props.includeLeftBorder === undefined || rc.props.includeLeftBorder) && includeLeftBorder && columnIndex === 0,\r\n                    includeRightBorder: (rc.props.includeRightBorder === undefined || rc.props.includeRightBorder) && includeRightBorder && columnIndex !== (rowCells.length - 1)\r\n                }))\r\n            }\r\n        </TableRow>\r\n    );\r\n}\r\n"]}